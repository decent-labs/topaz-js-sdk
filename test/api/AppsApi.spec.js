/**
 * Topaz API
 * ## Topaz API Spec  To get up and running with Topaz API as quickly as possible, read through these docs.  ### Prerequisites  Create an account at [https://topaz.io](https://topaz.io), log in, and generate an API Token.  You'll need an API Token to create a new app, create objects, create hashes, and view proofs.  All API requests should be prefixed with `/v1`, indicating that you're targeting version 1 of our API.  ### Guarantee  Topaz API follows Semantic Versioning (https://semver.org), so expect that any breaking changes will be versioned under a new route prefix.
 *
 * OpenAPI spec version: 0.1.17
 * Contact: hello@topaz.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2
 *
 * Do not edit the class manually.
 *
 */

'use strict';

const expect = require('expect.js');

const TopazApi = require('../../src/index');
const setup = require('../helpers/setup');

describe('AppsApi', function() {
  let instance;

  beforeEach('get a fresh api instance', function() {
    return setup.freshInstance()
      .then(instance = new TopazApi.AppsApi())
      .catch(err => console.error(err));
  });

  describe('createApp', function() {
    it('should call createApp successfully', function(done) {
      const input = new TopazApi.AppInput("my first app", 3600);
      instance.createApp({ body: input })
      .then(({ data, response }) => {
        expect(data.name).to.be(input.name);
        expect(data.interval).to.be(input.interval);
        expect(response.statusCode).to.be(201);
        done();
      })
      .catch(err => console.error(err));
    });
  });

  describe('findApps', function() {
    it('should call findApps successfully', function(done) {
      instance.createApp({ body: new TopazApi.AppInput("a", 30) })
      .then(() => instance.createApp({ body: new TopazApi.AppInput("b", 30) }))
      .then(() => instance.findApps())
      .then(({ data, response }) => {
        expect(data).to.have.length(2);
        expect(response.statusCode).to.be(200);
        done();
      })
      .catch(err => console.error(err));
    });
  });

  describe('getApp', function() {
    it('should call getApp successfully', function(done) {
      const input = new TopazApi.AppInput("my other app", 3600);
      instance.createApp({ body: input })
      .then(({ data, _ }) => Promise.all([instance.getApp(data.id), data.id]))
      .then(([{ data, response }, appId]) => {
        expect(data.id).to.be(appId);
        expect(data.name).to.be(input.name)
        expect(response.statusCode).to.be(200);
        done();
      })
      .catch(err => console.error(err));
    });
  });
});
